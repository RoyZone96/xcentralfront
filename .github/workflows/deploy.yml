name: CD - Deploy to Production

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment: staging
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for staging
      run: npm run build
      env:
        CI: false
        REACT_APP_API_URL: ${{ secrets.STAGING_API_URL }}
        REACT_APP_ENVIRONMENT: staging
    
    - name: Deploy to staging server
      uses: peaceiris/actions-gh-pages@v3
      if: success()
      with:
        github_token: ${{ secrets.GH_PAT }} # Use your PAT secret here
        publish_dir: ./build
        publish_branch: staging-deploy
        cname: staging.yourdomain.com  # Replace with your staging domain

  deploy-production:
    runs-on: ubuntu-latest
    environment: production
    needs: deploy-staging
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: npm run build
      env:
        CI: false
        REACT_APP_API_URL: ${{ secrets.PRODUCTION_API_URL }}
        REACT_APP_ENVIRONMENT: production
    
    - name: Deploy to production server
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GH_PAT }} # Use your PAT secret here
        publish_dir: ./build
        publish_branch: production-deploy
        cname: yourdomain.com  # Replace with your production domain
    
    - name: Notify deployment success
      if: success()
      run: |
        echo "ðŸš€ Production deployment successful!"
        echo "Version: ${{ github.event.release.tag_name }}"
        echo "Commit: ${{ github.sha }}"